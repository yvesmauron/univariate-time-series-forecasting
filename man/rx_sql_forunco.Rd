% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_forecast.R
\name{rx_sql_forunco}
\alias{rx_sql_forunco}
\title{forunco function for SQL Server compute context}
\usage{
rx_sql_forunco(
  connection_string,
  table,
  num_cores = 8,
  h = 2,
  levels = c(95),
  methods = c("auto_ets", "auto_arima", "auto_thetaf"),
  pp_methods = c("boxcox"),
  point_combination = "median",
  pi_combination_upper = "median",
  pi_combination_lower = "median",
  pool_limit = length(methods),
  error_fun = "rmse",
  weight_fun = "inverse",
  val_h = h,
  sov_only = F,
  max_years = 30,
  val_min_years = 4,
  cv_min_years = 5,
  cv_max_samples = 3,
  allow_negatives = F,
  ...
)
}
\arguments{
\item{connection_string}{mandatory: Connectionstring to the database}

\item{table}{mandatory: Table name that is the source for the forecasting objects}

\item{num_cores}{number of cores to be used, default \code{8}.}

\item{h}{number of horizons to predict.}

\item{levels}{Prediction interval levels. Optional, default \code{c(95)}.}

\item{methods}{Methods to be combined. Optional, default \code{auto_ets, auto_arima, auto_dotm}.}

\item{point_combination}{Point forecast combination operator. Optional, default \code{meidan}.}

\item{pi_combination_upper}{combination operator of the upper bound of the prediction intervals. Optional, default \code{max}.}

\item{pi_combination_lower}{combination operator for the lower bounds of the prediction intervals. Optional, default \code{min}.}

\item{pool_limit}{number of methods selected from the pool to reach the final forecasts. Optional, default \code{length(methods)}.}

\item{error_fun}{error function to determine the validation performance Optional, default \code{rmse}.}

\item{weight_fun}{weight function for calculating the definitive weights for combination. Optional, default \code{inverse}}

\item{val_h}{The horizon for the validation samples. Optional, default \code{h}.}

\item{sov_only}{Flag indicating whether only single origin validation should be considered. Optional, default \code{TRUE}.}

\item{max_years}{Maxmium of years to consider during model fitting. Optional, default \code{30}.}

\item{val_min_years}{Minimum years required to conduct single origin validation. Optional, default \code{4}.}

\item{cv_min_years}{Minimum years required to conduct cross-origin validation. Optional, default \code{5}.}

\item{cv_max_samples}{Maximum samples that should be considered during cross-validation, i.e. 3 indicates the algorithm validates from 3 origins. Optional, default \code{3}.}

\item{allow_negatives}{Flag indicating whether to allow negative values or not. Optional, default \code{FALSE}.}

\item{...}{}
}
\value{
forecest data.frame
}
\description{
Implements the forunco function for optimal parallelisation with machine learning services of sql server 2017
}
\examples{
\dontrun{
connection_string <- "Server=LTYMA01\\\\QWERTZ;Database=FORECASTING_DATA;UID=ruser;PWD=ruser;"
table <- paste0("m3.vw_Micro")
result <- rx_sql_forunco(connection_string=connection_string, table=table)
#    .id  TSN       date  type       value
#     P1 1403 1994-03-02 Point  1468.48451
#     P1 1403 1994-03-30 Point  1468.48451
#     P1 1403 1994-04-30 Point  1468.48451
#     P1 1403 1994-05-30 Point  1468.48451
#     P1 1403 1994-06-30 Point  1468.48451
}
}
