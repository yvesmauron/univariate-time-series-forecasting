% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_forecast.R
\name{forecast_forunco}
\alias{forecast_forunco}
\title{Forunco function for batch forecasting in R}
\usage{
forecast_forunco(
  ts_col,
  h = 12,
  num_cores = NULL,
  num_cores_ignore = 1,
  prog_bar = T,
  levels = c(95),
  methods = c("auto_ets", "auto_arima", "auto_dotm"),
  point_combination = "median",
  pi_combination_upper = "median",
  pi_combination_lower = "median",
  pool_limit = length(methods),
  error_fun = "rmse",
  weight_fun = "inverse",
  val_h = h,
  sov_only = F,
  max_years = 30,
  val_min_years = 4,
  cv_min_years = 5,
  cv_max_samples = 3,
  allow_negatives = F,
  ...
)
}
\arguments{
\item{ts_col}{list of time series objects}

\item{h}{number of horizons to predict}

\item{num_cores}{number of cores to be used; default: NULL (all cores)}

\item{num_cores_ignore}{number of cores to be ignored for e.g. OS; default: 1}

\item{prog_bar}{boolean, whether or not a progress bar should be displyed}

\item{levels}{Prediction interval levels. Optional, default \code{c(95)}.}

\item{methods}{Methods to be combined. Optional, default \code{auto_ets, auto_arima, auto_dotm}.}

\item{point_combination}{Point forecast combination operator. Optional, default \code{meidan}.}

\item{pi_combination_upper}{combination operator of the upper bound of the prediction intervals. Optional, default \code{max}.}

\item{pi_combination_lower}{combination operator for the lower bounds of the prediction intervals. Optional, default \code{min}.}

\item{pool_limit}{number of methods selected from the pool to reach the final forecasts. Optional, default \code{length(methods)}.}

\item{error_fun}{error function to determine the validation performance Optional, default \code{rmse}.}

\item{weight_fun}{weight function for calculating the definitive weights for combination. Optional, default \code{inverse}}

\item{val_h}{The horizon for the validation samples. Optional, default \code{h}.}

\item{sov_only}{Flag indicating whether only single origin validation should be considered. Optional, default \code{TRUE}.}

\item{max_years}{Maxmium of years to consider during model fitting. Optional, default \code{30}.}

\item{val_min_years}{Minimum years required to conduct single origin validation. Optional, default \code{4}.}

\item{cv_min_years}{Minimum years required to conduct cross-origin validation. Optional, default \code{5}.}

\item{cv_max_samples}{Maximum samples that should be considered during cross-validation, i.e. 3 indicates the algorithm validates from 3 origins. Optional, default \code{3}.}

\item{allow_negatives}{Flag indicating whether to allow negative values or not. Optional, default \code{FALSE}.}

\item{...}{}
}
\value{
list with mean, pis and data_frame containing the predicted values
}
\description{
Implements the forunco function for optimal parallelisation with machine learning services of sql server 2017
}
\examples{
\dontrun{
library(tritelligence)
library(Mcomp)
m3 <- M3[2000:2025]
#a time series colllection has n elements, each of which is a time series
# object.
ts_col <- lapply(m3, function(x) {x$x})

result <- forecast_forunco(ts_col)
preds[[1]]
$mean
[1] 5054.439 5048.170 5048.170 5048.170 5048.170 5048.170 5048.170 5048.170 5048.170 5048.170 5048.170 5048.170

$upper
[1] 6348.204 6883.349 7294.081 7640.378 7945.488 8221.338 8475.014 8711.134 8932.906 9142.665 9342.174 9532.805

$lower
[1] 3760.6740 3149.1485 2453.7666 2132.0499 2054.5814 1887.5394 1633.8633 1397.7433 1175.9717  894.6316  766.7032  576.0728

$preds
# A tibble: 36 X 3
date  type    value
<date>     <chr>    <dbl>
1989-07-02 Point 5054.439
1989-08-02 Point 5048.170
1989-09-02 Point 5048.170
1989-10-02 Point 5048.170
1989-11-02 Point 5048.170
1989-12-02 Point 5048.170
1990-01-02 Point 5048.170
1990-02-02 Point 5048.170
1990-03-02 Point 5048.170
1990-04-02 Point 5048.170
}
}
